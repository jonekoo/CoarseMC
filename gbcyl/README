This is ptgbcyl A parallel-tempering, constant NPT Metropolis Monte Carlo 
simulation program for a bulk Gay-Berne (GB) liquid crystal or one confined in
a cylindrical cavity.

The copyright belongs to Jouni Karjalainen for most of the code but there are
routines some modules and subroutines that have different copyright ownership.
Where appropriate, these are documented in the source files. 


Compiling
---------

This example is assuming that a bourne shell eg. bash is used and that you have
a working fortran compiler with MPI. OpenMPI 1.7.x or newer is recommended.

Here we assume that the name of the fortran compiler wrapper including the MPI
directories is mpif90. LD_LIBRARY_PATH may have to be set to pass the compiler
tests made by the configure script. 

Give the following commands in the shell. To see more options use command
./configure --help


./configure --prefix=yourinstallationpath FC=mpif90 \
[FCFLAGS=your compiler options] 
make 
make install

The executables should be now installed to yourinstallationpath/bin/
Example parameter file gbcyl.in and example starting configurations have been 
installed to yourinstallationpath/share/


Optimizations
-------------

Use of compiler/linker flags for interprocedural optimization is highly
recommended to reduce the run time! (-ipo or similar with the Intel compiler)

When using interprocedural optimization you may have to compile the mt_stream
library first without it by going to the mt_stream-1.11 folder and giving the 
command make FCFLAGS=[your options without the interprocedural optimization] 

Example with ifort:

./configure --prefix=yourinstallationpath FC=mpif90 FCFLAGS=-ipo
(cd mt_stream-1.11 && make FCFLAGS=-ip)
make
make install


Example for GCC without the interprocedural optimization:

./configure --prefix=yourinstallationpath FC=mpif90 FCFLAGS="-O2 -g"
(cd mt_stream_f90-1.11 && make FCFLAGS="-O2 -g -fno-range-check")
make
make install


Usage
-----

A new simulation:

You need the following files:
1. program binary: ptgbcyl (default)
2. parameter files for each cpu/replica for parallel tempering: 
   inputparameters.0, inputparameters.1, ...  
   Each of the parameter files must have different temperature!
3. file to read the starting configuration of the molecules for each cpu: 
   inputconfiguration.0, inputconfiguration.1, ...
   The configuration files can all be similar or different. 

Copy parameter file and starting configuration to the directory where you want 
to run the program and have the program output files.



Example of running with 8 cores. The specific way to run the program will 
probably depend on the system you are working at

mpirun -np 8 ./ptgbcyl


The program will periodically output restartparameters.0, restartparameters.1,
... and restartconfigurations.0, restartconfigurations.1,... You can replace 
the corresponding input files with these to e.g. restart an interrupted 
simulation.
